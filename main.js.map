{"mappings":"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","sources":["backClassroom/server.js","backClassroom/app.js","backClassroom/utils/appError.js","backClassroom/controller/errorController.js","backClassroom/routes/userRoutes.js","backClassroom/controller/userController.js","backClassroom/models/userModel.js","backClassroom/utils/apifeatures.js","backClassroom/utils/catchAsync.js","backClassroom/utils/utility.js","backClassroom/controller/authController.js","backClassroom/models/lineUserModel.js","backClassroom/utils/email.js","backClassroom/routes/classroomRoutes.js","backClassroom/controller/classroomController.js","backClassroom/models/classroomModel.js","backClassroom/models/contentModel.js","backClassroom/models/submissionModel.js","backClassroom/routes/contentRoutes.js","backClassroom/controller/contentController.js","backClassroom/routes/lineUserRoutes.js","backClassroom/controller/lineUserController.js","backClassroom/routes/fileRoutes.js","backClassroom/controller/fileController.js","backClassroom/models/fileModel.js","backClassroom/routes/submissionRoutes.js","backClassroom/controller/submissionController.js","backClassroom/routes/lineAPIRoutes.js","backClassroom/controller/lineAPIController.js"],"sourcesContent":["const mongoose = require('mongoose');\r\nconst dotenv = require('dotenv');\r\n\r\nprocess.on('uncaughtException', (err) => {\r\n  console.log('UNCAUGHT REJECTION !!! SHUTTING DOWN');\r\n  console.log(err.name, err.message);\r\n  process.exit(1);\r\n});\r\n\r\ndotenv.config({ path: './config.env' });\r\nconst app = require('./app');\r\n\r\nconst DB = process.env.DATABASE.replace(\r\n  '<PASSWORD>',\r\n  process.env.DATABASE_PASSWORD\r\n);\r\n\r\n// replace DB with process.env.DATABASE_LOCAL for local database\r\nmongoose\r\n  .connect(DB, {\r\n    useNewUrlParser: true,\r\n    useCreateIndex: true,\r\n    autoIndex: true,\r\n    useFindAndModify: false,\r\n  })\r\n  .then(() => {\r\n    console.log('DB connection successful');\r\n  });\r\n\r\nconst port = process.env.PORT || 5000;\r\nconst server = app.listen(port, () => {\r\n  console.log(`app running on port ${port}`);\r\n});\r\n\r\nprocess.on('unhandledRejection', (err) => {\r\n  console.log(err.name, err.message);\r\n  console.log('UNHANDLE REJECTION !!! SHUTTING DOWN');\r\n  server.close(() => {\r\n    process.exit(1);\r\n  });\r\n});\r\n","/*\r\nThis file for run express and middleware \r\n*/\r\nconst AppError = require('./utils/appError');\r\nconst globalErrorHandler = require('./controller/errorController');\r\nconst express = require('express');\r\nconst morgan = require('morgan');\r\nconst rateLimit = require('express-rate-limit');\r\nconst helmet = require('helmet');\r\nconst mongoSanitize = require('express-mongo-sanitize');\r\nconst xss = require('xss-clean');\r\nconst hpp = require('hpp');\r\nconst compression = require('compression');\r\nconst cors = require('cors');\r\n\r\n//ROUTER\r\nconst userRouter = require('./routes/userRoutes');\r\nconst classroomRouter = require('./routes/classroomRoutes');\r\nconst contentRouter = require('./routes/contentRoutes');\r\nconst lineUserRouter = require('./routes/lineUserRoutes');\r\nconst fileRouter = require('./routes/fileRoutes');\r\nconst submissionRouter = require('./routes/submissionRoutes');\r\nconst lineAPIRouter = require('./routes/lineAPIRoutes');\r\n\r\nconst app = express();\r\n\r\n//Allow ALL CORS\r\napp.use(cors());\r\n\r\n// GLOBAL MIDDLEWARE\r\n// Set security HTTP Header\r\napp.use(helmet());\r\n\r\n// Development loging request\r\nif (process.env.NODE_ENV === 'development') {\r\n  app.use(morgan('dev'));\r\n}\r\n\r\n// Request limiter\r\n// จำกัด 100 request ต่อ ip ในช่วง 1 ชั่วโมงเวลา\r\nconst limiter = rateLimit({\r\n  max: 1000,\r\n  windowMs: 60 * 60 * 1000,\r\n  message: 'Too many request, please try again in an hour',\r\n});\r\napp.use('/api', limiter);\r\n\r\n// Body Parser to req.body\r\napp.use(express.json({ limit: '10kb' }));\r\n\r\n// Data Sanitization against noSQL query injection\r\napp.use(mongoSanitize());\r\n\r\n// Data Sanitization against XSS\r\napp.use(xss());\r\n\r\n// Prevent Parameter Pollution\r\napp.use(hpp());\r\n\r\n// for access file on specifict path\r\napp.use(express.static(`${__dirname}/public`));\r\n\r\n// Put time in request\r\napp.use((req, res, next) => {\r\n  req.requestTime = new Date().toISOString();\r\n  //console.log(req.headers);\r\n  next();\r\n});\r\n\r\n// Compress Response\r\napp.use(compression());\r\n\r\n// ROUTE\r\n// route mouting\r\napp.use('/api/users', userRouter);\r\napp.use('/api/classrooms', classroomRouter);\r\napp.use('/api/contents', contentRouter);\r\napp.use('/api/lineUsers', lineUserRouter);\r\napp.use('/api/files', fileRouter);\r\napp.use('/api/submissions', submissionRouter);\r\napp.use('/api/lineAPI', lineAPIRouter);\r\n\r\n// Unhandled route\r\napp.all('*', (req, res, next) => {\r\n  next(new AppError(`Can't find the ${req.originalUrl}`, 404));\r\n});\r\n\r\n// GLOBAL HANDLING MIDDLEWARE\r\napp.use(globalErrorHandler);\r\n\r\nmodule.exports = app;\r\n","class AppError extends Error {\r\n  constructor(message, statusCode) {\r\n    super(message);\r\n\r\n    this.statusCode = statusCode;\r\n    this.status = `${statusCode}`.startsWith('4') ? 'fail' : 'error';\r\n    this.isOperational = true;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\nmodule.exports = AppError;\r\n","const AppError = require('../utils/appError');\r\n\r\nconst handleJWTExpiredError = () =>\r\n  new AppError('your token has expire, please login again', 401);\r\n\r\nconst handleJWTError = () =>\r\n  new AppError('Invalid token, please login again', 401);\r\n\r\nconst handleDuplicateFieldsDB = (err) => {\r\n  const message = `Duplicate value`;\r\n  let error = new AppError(message, 400);\r\n  return error;\r\n};\r\n\r\nconst handleCastErrorDB = (err) => {\r\n  const message = `Invalid ${err.path}: ${err.value}`;\r\n  let error = new AppError(message, 400);\r\n  return error;\r\n};\r\n\r\nconst handleValidationErrorDB = (err) => {\r\n  const errors = Object.values(err.errors).map((el) => el.message);\r\n\r\n  const message = `Invalid data input ${errors.join(', ')}`;\r\n  let error = new AppError(message, 400);\r\n  return error;\r\n};\r\n\r\nconst sendErrorDev = (err, res) => {\r\n  res.status(err.statusCode).json({\r\n    status: err.status,\r\n    error: err,\r\n    message: err.message,\r\n    stack: err.stack,\r\n  });\r\n};\r\n\r\nconst sendErrorProd = (err, res) => {\r\n  // Operational Error\r\n  if (err.isOperational) {\r\n    res.status(err.statusCode).json({\r\n      status: err.status,\r\n      message: err.message,\r\n    });\r\n    // Programming error\r\n  } else {\r\n    // send error message\r\n    res.status(500).json({\r\n      status: 'error',\r\n      stack: 'Something went wrong',\r\n    });\r\n  }\r\n};\r\n\r\nmodule.exports = (err, req, res, next) => {\r\n  err.statusCode = err.statusCode || 500;\r\n  err.status = err.status || 'error';\r\n\r\n  if (process.env.NODE_ENV === 'development') {\r\n    sendErrorDev(err, res);\r\n  } else if (process.env.NODE_ENV === 'production') {\r\n    let error = { ...err };\r\n    //console.log(err);\r\n\r\n    if (err.name == 'CastError') {\r\n      error = handleCastErrorDB(error);\r\n    }\r\n    if (err.code == 11000) {\r\n      error = handleDuplicateFieldsDB(error);\r\n    }\r\n    if (err.name == 'ValidationError') {\r\n      error = handleValidationErrorDB(error);\r\n    }\r\n    if (err.name == 'JsonWebTokenError') {\r\n      error = handleJWTError();\r\n    }\r\n    if (err.name == 'TokenExpiredError') {\r\n      error = handleJWTExpiredError();\r\n    }\r\n\r\n    sendErrorProd(error, res);\r\n  }\r\n};\r\n","const express = require('express');\r\nconst userController = require('../controller/userController');\r\nconst authController = require('../controller/authController');\r\n\r\n// create router from express\r\nconst router = express.Router();\r\n\r\n// Normal route\r\nrouter.get('/getMyUser', authController.protect, userController.getMyUser);\r\n\r\nrouter.post('/signup', authController.signup);\r\nrouter.post('/login', authController.login);\r\n\r\nrouter.post('/isLogin', authController.protect, authController.isLogin);\r\n\r\nrouter.post('/forgetPassword', authController.forgetPassword);\r\nrouter.patch('/resetPassword/:token', authController.resetPassword);\r\nrouter.patch(\r\n  '/updatePassword',\r\n  authController.protect,\r\n  authController.updatePassword\r\n);\r\nrouter.patch(\r\n  '/updateMyUser',\r\n  authController.protect,\r\n  userController.updateMyUser\r\n);\r\n\r\n// Aggreatte route\r\nrouter.route('/users-stats').get(userController.getUserStats);\r\n\r\n// CRUD Route  Authentication | Authorization | Responce\r\nrouter\r\n  .route('/')\r\n  .get(authController.protect, userController.getAllUsers)\r\n  .post(userController.postUser);\r\n\r\nrouter\r\n  .route('/:id')\r\n  .get(userController.getUser)\r\n  .patch(userController.updateUser)\r\n  .delete(\r\n    authController.protect,\r\n    authController.restrictTo('admin'),\r\n    userController.deleteUser\r\n  );\r\n\r\nmodule.exports = router;\r\n","const User = require('../models/userModel');\r\nconst APIFeatures = require('../utils/apifeatures');\r\nconst AppError = require('../utils/appError');\r\nconst catchAsync = require('../utils/catchAsync');\r\nconst utility = require('../utils/utility');\r\n\r\n// Adminstator API\r\n//ROUTE HANDLER\r\nexports.getAllUsers = catchAsync(async (req, res, next) => {\r\n  // EXECUTE QUERY FOR IMPLEMENT ( AWAIT จะได้ผลลัพท์เป็น promise object ต้องเอา query แยกไว้)\r\n  const features = new APIFeatures(User.find(), req.query)\r\n    .filter()\r\n    .sort()\r\n    .limitFields()\r\n    .paginate();\r\n  const users = await features.query;\r\n\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      users,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getUser = catchAsync(async (req, res, next) => {\r\n  const user = await User.findById(req.params.id);\r\n  if (!user) {\r\n    return next(new AppError('no user found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n});\r\n\r\nexports.postUser = catchAsync(async (req, res, next) => {\r\n  const newUser = await User.create(req.body);\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      newUser,\r\n    },\r\n  });\r\n});\r\n\r\nexports.updateUser = catchAsync(async (req, res, next) => {\r\n  const user = await User.findByIdAndUpdate(req.params.id, req.body, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  if (!user) {\r\n    return next(new AppError('no user found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n});\r\n\r\nexports.deleteUser = catchAsync(async (req, res, next) => {\r\n  const user = await User.findByIdAndDelete(req.params.id);\r\n\r\n  if (!user) {\r\n    return next(new AppError('no user found with that id', 404));\r\n  }\r\n\r\n  res.status(204).json({\r\n    status: 'success',\r\n    data: null,\r\n  });\r\n});\r\n\r\nexports.getUserStats = catchAsync(async (req, res, next) => {\r\n  const stats = await User.aggregate([\r\n    {\r\n      $match: { number: { $gte: 3 } },\r\n    },\r\n    {\r\n      $group: {\r\n        _id: '$email',\r\n        num: { $sum: 1 },\r\n        sumNum: { $sum: '$number' },\r\n        avg: { $avg: '$number' },\r\n        min: { $min: '$number' },\r\n        max: { $max: '$number' },\r\n      },\r\n    },\r\n    {\r\n      $sort: { avg: 1 },\r\n    },\r\n    {\r\n      $match: { _id: { $ne: 'sorawit.nu@ku.th' } },\r\n    },\r\n  ]);\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      stats,\r\n    },\r\n  });\r\n});\r\n\r\n// User public API\r\n\r\nexports.updateMyUser = catchAsync(async (req, res, next) => {\r\n  // check condition\r\n  if (req.body.password) {\r\n    return next(new AppError('cannot change password on this route', 400));\r\n  }\r\n\r\n  //filter | argument ตามด้วยค่าใน DB ที่ user สามารถเปลี่ยนเองได้\r\n  const filterdBody = utility.filterObject(req.body, 'name');\r\n  const updateUser = await User.findByIdAndUpdate(req.user.id, filterdBody, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  //update document\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user: updateUser,\r\n    },\r\n  });\r\n});\r\n\r\n// User route\r\n\r\nexports.getMyUser = catchAsync(async (req, res, next) => {\r\n  const user = req.user;\r\n  if (!user) {\r\n    return next(new AppError('unknown error', 404));\r\n  }\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n});\r\n","const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst bcrypt = require('bcryptjs');\r\nconst crypto = require('crypto');\r\n\r\nconst userSchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      default: 'default_user_name',\r\n      maxlength: [20, 'a name should not be longer than 10 character'],\r\n      minlength: [3, 'a name must be longer than 3 character'],\r\n      validator: [validator.isAlpha, 'must only contain character'],\r\n    },\r\n    lineID: {\r\n      type: String,\r\n    },\r\n    email: {\r\n      type: String,\r\n      unique: true,\r\n      validate: [validator.isEmail, 'must be an valid email'],\r\n    },\r\n    role: {\r\n      type: String,\r\n      enum: ['user', 'admin'],\r\n      default: 'user',\r\n    },\r\n    photo: String,\r\n    password: {\r\n      type: String,\r\n      require: [true, 'Password is require'],\r\n      minlength: [8, 'a password must be longer than 8 character'],\r\n      select: false,\r\n    },\r\n    passwordChangedAt: Date,\r\n    classrooms: {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n    passwordResetToken: String,\r\n    passwordResetExpire: Date,\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n/*\r\nuserSchema.virtual('virtualNumber').get(function () {\r\n  return this.number * 2;\r\n});\r\n*/\r\n\r\n// Document Middleware for hashing password\r\nuserSchema.pre('save', async function (next) {\r\n  // only run if passwod are modify\r\n  if (!this.isModified('password')) return next();\r\n\r\n  this.password = await bcrypt.hash(this.password, 12);\r\n  next();\r\n});\r\n\r\n// method คือ function ที่ call ได้ทุกที่กับ object นี้\r\nuserSchema.methods.correctPassword = async function (\r\n  candidatePassword,\r\n  userPassword\r\n) {\r\n  return await bcrypt.compare(candidatePassword, userPassword);\r\n};\r\n\r\nuserSchema.methods.changedPasswordAfter = function (JWTTimeStamp) {\r\n  if (this.passwordChangedAt) {\r\n    const changedTimestamp = parseInt(\r\n      this.passwordChangedAt.getTime() / 1000,\r\n      10\r\n    );\r\n\r\n    return JWTTimeStamp < changedTimestamp;\r\n  }\r\n  return false;\r\n};\r\n\r\n// เพิ่มเวลาเปลี่ยน password ครั้งล่าสุดใน database\r\nuserSchema.pre('save', function (next) {\r\n  if (!this.isModified('password') || this.isNew) return next();\r\n\r\n  this.passwordChangedAt = Date.now() - 1000;\r\n  next();\r\n});\r\n\r\nuserSchema.methods.createPasswordResetToken = function () {\r\n  const resetToken = crypto.randomBytes(32).toString('hex');\r\n\r\n  this.passwordResetToken = crypto\r\n    .createHash('sha256')\r\n    .update(resetToken)\r\n    .digest('hex');\r\n\r\n  this.passwordResetExpire = Date.now() + 10 * 60 * 1000;\r\n\r\n  //console.log({ resetToken }, this.passwordResetToken);\r\n\r\n  return resetToken;\r\n};\r\n\r\nconst User = mongoose.model('User', userSchema);\r\n\r\nmodule.exports = User;\r\n","class APIFeatures {\r\n  constructor(query, queryString) {\r\n    this.query = query;\r\n    this.queryString = queryString;\r\n  }\r\n\r\n  filter() {\r\n    // 1A filtering\r\n    const queryObj = { ...this.queryString }; // create new query object\r\n    const excludeFields = ['page', 'sort', 'limit', 'fields']; // list of unquery word\r\n    excludeFields.forEach((el) => delete queryObj[el]); // get query  from database\r\n\r\n    // 1B advance filtering\r\n    let queryStr = JSON.stringify(queryObj); // แปลง queryObj เป็น string\r\n    queryStr = queryStr.replace(/\\b(gte|gt|lt|lte)\\b/g, (match) => `$${match}`); // replace string เป็น queryObject\r\n\r\n    this.query = this.query.find(JSON.parse(queryStr));\r\n\r\n    return this;\r\n  }\r\n\r\n  sort() {\r\n    if (this.queryString.sort) {\r\n      const sortBy = this.queryString.sort.split(',').join(' ');\r\n      this.query = this.query.sort(sortBy);\r\n    } else {\r\n      this.query = this.query.sort('name');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  limitFields() {\r\n    if (this.queryString.fields) {\r\n      const fields = this.queryString.fields.split(',').join(' ');\r\n      this.query = this.query.select(fields);\r\n    } else {\r\n      this.query = this.query.select('-__v');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  paginate() {\r\n    const page = this.queryString.page * 1 || 1;\r\n    const limit = this.queryString.limit * 1 || 100;\r\n    const skip = (page - 1) * limit;\r\n\r\n    this.query = this.query.skip(skip).limit(limit);\r\n\r\n    return this;\r\n  }\r\n}\r\n\r\nmodule.exports = APIFeatures;\r\n","module.exports = (fn) => {\r\n  return (req, res, next) => {\r\n    fn(req, res, next).catch(next);\r\n  };\r\n};\r\n","/**\r\n * Filter an object by passing in an array of allowed fields.\r\n */\r\nexports.filterObject = (obj, ...allowedFields) => {\r\n  const newObj = {};\r\n  Object.keys(obj).forEach((el) => {\r\n    if (allowedFields.includes(el)) {\r\n      newObj[el] = obj[el];\r\n    }\r\n  });\r\n  return newObj;\r\n};\r\n","const fetch = require('node-fetch');\r\nconst jwt = require('jsonwebtoken');\r\nconst User = require('../models/userModel');\r\nconst LineUser = require('../models/lineUserModel');\r\nconst catchAsync = require('../utils/catchAsync');\r\nconst AppError = require('../utils/appError');\r\nconst sendEmail = require('../utils/email');\r\nconst crypto = require('crypto');\r\nconst { promisify } = require('util');\r\n\r\nconst verifyLineToken = async (token) => {\r\n  const response = await fetch(\r\n    `https://api.line.me/oauth2/v2.1/verify?access_token=${token}`,\r\n    {\r\n      method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n      mode: 'cors', // no-cors, *cors, same-origin\r\n    }\r\n  );\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n};\r\n\r\nconst getLineUserProfile = async (token) => {\r\n  const response = await fetch(`https://api.line.me/v2/profile`, {\r\n    method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n    mode: 'cors', // no-cors, *cors, same-origin\r\n    headers: {\r\n      Authorization: 'Bearer ' + token,\r\n    },\r\n  });\r\n  return response.json(); // parses JSON response into native JavaScript objects\r\n};\r\n\r\nconst signToken = (id) => {\r\n  return jwt.sign({ id: id }, process.env.JWT_SECRET, {\r\n    expiresIn: process.env.JWT_EXPIRES_IN,\r\n  });\r\n};\r\n\r\nconst createSendToken = (user, statusCode, res) => {\r\n  const token = signToken(user._id);\r\n  const cookieOptions = {\r\n    expires: new Date(\r\n      Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000\r\n    ),\r\n    httpOnly: true,\r\n  };\r\n\r\n  if ((process.env.NODE_ENV = 'production')) {\r\n    cookieOptions.secure = true;\r\n  }\r\n  res.cookie('jwt', token, cookieOptions);\r\n\r\n  // remove the password\r\n  user.password = undefined;\r\n\r\n  res.status(statusCode).json({\r\n    status: 'success',\r\n    token,\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n};\r\n\r\nexports.signup = catchAsync(async (req, res, next) => {\r\n  const newUser = await User.create({\r\n    name: req.body.name,\r\n    email: req.body.email,\r\n    password: req.body.password,\r\n    lineID: req.body.lineID,\r\n  });\r\n\r\n  createSendToken(newUser, 201, res);\r\n});\r\n\r\nexports.login = catchAsync(async (req, res, next) => {\r\n  const { email, password } = req.body;\r\n\r\n  // check if email and password is exist\r\n  if (!email || !password) {\r\n    return next(new AppError('Please provide user and password', 400));\r\n  }\r\n\r\n  // check if user exist and password correct\r\n  const user = await User.findOne({ email: email }).select('+password');\r\n\r\n  if (!user || !(await user.correctPassword(password, user.password))) {\r\n    return next(new AppError('Incorrect email or password', 401));\r\n  }\r\n\r\n  createSendToken(user, 200, res);\r\n});\r\n\r\n//Middleware function for protect route\r\nexports.protect = catchAsync(async (req, res, next) => {\r\n  let token;\r\n\r\n  // get token and check token\r\n  if (\r\n    req.headers.authorization &&\r\n    req.headers.authorization.startsWith('Bearer')\r\n  ) {\r\n    token = req.headers.authorization.split(' ')[1];\r\n  }\r\n  //console.log(token);\r\n\r\n  if (!token) {\r\n    return next(new AppError('You are not logged in!', 401));\r\n  }\r\n\r\n  // verification the token\r\n  const decoded = await promisify(jwt.verify)(token, process.env.JWT_SECRET);\r\n\r\n  // check if user still exist\r\n  const currentUser = await User.findById(decoded.id);\r\n  if (!currentUser) {\r\n    return next(\r\n      new AppError('the token belong to this user is no longer exist', 401)\r\n    );\r\n  }\r\n\r\n  // check if user changed password after the token was issue\r\n  if (currentUser.changedPasswordAfter(decoded.iat)) {\r\n    return next(\r\n      new AppError('user password has been change, please login again', 401)\r\n    );\r\n  }\r\n\r\n  // GRANT ACCESS TO PROTECTED ROUTE\r\n  req.user = currentUser;\r\n  next();\r\n});\r\n\r\nexports.restrictTo = (...roles) => {\r\n  return (req, res, next) => {\r\n    // role [ user, admin]\r\n    if (!roles.includes(req.user.role)) {\r\n      return next(new AppError('you do not have permission', 403));\r\n    }\r\n\r\n    next();\r\n  };\r\n};\r\n\r\nexports.forgetPassword = catchAsync(async (req, res, next) => {\r\n  // get user base on email\r\n  const user = await User.findOne({ email: req.body.email });\r\n  if (!user) {\r\n    return next(new AppError('no user with that email', 404));\r\n  }\r\n\r\n  // generate the random reset token\r\n  const resetToken = user.createPasswordResetToken();\r\n  await user.save({ validateBeforeSave: false });\r\n\r\n  // send it to user email\r\n  const resetURL = `${req.protocol}://${req.get(\r\n    'host'\r\n  )}/api/users/resetPassword/${resetToken}`;\r\n\r\n  const message = `submit the patch request to change you password to ${resetURL}`;\r\n\r\n  try {\r\n    await sendEmail({\r\n      email: user.email,\r\n      subject: 'You password reset token (valid for 10min)',\r\n      message,\r\n    });\r\n    res.status(200).json({\r\n      status: 'success',\r\n      message: 'token send to email',\r\n    });\r\n  } catch (err) {\r\n    user.passwordResetToken = undefined;\r\n    user.passwordResetExpire = undefined;\r\n    await user.save({ validateBeforeSave: false });\r\n\r\n    return next(\r\n      new AppError('There was an error sending an email, try again later', 500)\r\n    );\r\n  }\r\n});\r\n\r\nexports.resetPassword = async (req, res, next) => {\r\n  // get user base on the token\r\n  const hashedToken = crypto\r\n    .createHash('sha256')\r\n    .update(req.params.token)\r\n    .digest('hex');\r\n\r\n  const user = await User.findOne({\r\n    passwordResetToken: hashedToken,\r\n    passwordResetExpire: { $gt: Date.now() },\r\n  });\r\n\r\n  // if token has not expire, and there is a user, set the new password\r\n  if (!user) {\r\n    return next(new AppError('Token is invalid or has expired', 400));\r\n  }\r\n  user.password = req.body.password;\r\n  user.passwordResetToken = undefined;\r\n  user.passwordResetExpire = undefined;\r\n  await user.save();\r\n\r\n  // update changedPasswordAt property for the user\r\n  // log the user in and send JWT\r\n  createSendToken(user, 200, res);\r\n};\r\n\r\nexports.updatePassword = catchAsync(async (req, res, next) => {\r\n  // get user\r\n  let user = req.user;\r\n  user = await User.findById(req.user.id).select('+password');\r\n\r\n  // check that current password that user provide is correct\r\n  if (\r\n    !user ||\r\n    !(await user.correctPassword(req.body.password, user.password))\r\n  ) {\r\n    return next(new AppError('Incorrect email or password', 401));\r\n  }\r\n\r\n  // update the password\r\n  user.password = req.body.newPassword;\r\n  await user.save();\r\n\r\n  // update changedPasswordAt property for the user\r\n  // log the user in and send JWT\r\n  createSendToken(user, 200, res);\r\n});\r\n\r\nexports.isLogin = catchAsync(async (req, res, next) => {\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n  });\r\n});\r\n\r\nexports.lineLogin = catchAsync(async (req, res, next) => {\r\n  let token;\r\n\r\n  // get token and check token\r\n  if (\r\n    req.headers.authorization &&\r\n    req.headers.authorization.startsWith('Bearer')\r\n  ) {\r\n    token = req.headers.authorization.split(' ')[1];\r\n  }\r\n\r\n  if (!token) {\r\n    return next(new AppError('You are not provide a token!', 401));\r\n  }\r\n\r\n  //DEVELOPMENT ONLY\r\n  if (token === process.env.BYPASS_TOKEN) {\r\n    LineUser.findOne({ lineUserId: 'FAKELINEUSERID' }).then((lineUser) => {\r\n      if (!lineUser) {\r\n        return next(new AppError('user not found', 401));\r\n      }\r\n\r\n      createSendToken(lineUser, 200, res);\r\n    });\r\n  }\r\n  if (token === process.env.BYPASS_TOKEN2) {\r\n    LineUser.findOne({ lineUserId: 'a1s0andf7us3r' }).then((lineUser) => {\r\n      if (!lineUser) {\r\n        return next(new AppError('user not found', 401));\r\n      }\r\n\r\n      createSendToken(lineUser, 200, res);\r\n    });\r\n  }\r\n  //DEVELOPMENT ONLY END\r\n\r\n  // verification the token\r\n  // somehow can't figure out this to working with  await\r\n  verifyLineToken(token).then((verifyResult) => {\r\n    if (!verifyResult.client_id) {\r\n      return next(\r\n        new AppError('Invalid token or token are no longer valid', 401)\r\n      );\r\n    }\r\n\r\n    //Use line token to get user information\r\n    getLineUserProfile(token).then((userProfile) => {\r\n      // check if line user already exist\r\n      const lineUserId = userProfile.userId;\r\n      LineUser.findOne({ lineUserId: lineUserId }).then((lineUser) => {\r\n        if (!lineUser) {\r\n          return next(new AppError('user not found', 401));\r\n        }\r\n\r\n        createSendToken(lineUser, 200, res);\r\n      });\r\n    });\r\n  });\r\n});\r\n\r\nexports.lineSignUp = catchAsync(async (req, res, next) => {\r\n  let token;\r\n\r\n  // get token and check token\r\n  if (\r\n    req.headers.authorization &&\r\n    req.headers.authorization.startsWith('Bearer')\r\n  ) {\r\n    token = req.headers.authorization.split(' ')[1];\r\n  }\r\n\r\n  if (!token) {\r\n    return next(new AppError('You are not provide a token!', 401));\r\n  }\r\n\r\n  // verification the token\r\n  // somehow can't figure out this to working with  await\r\n  verifyLineToken(token).then((verifyResult) => {\r\n    if (!verifyResult.client_id) {\r\n      return next(\r\n        new AppError('Invalid token or token are no longer valid', 401)\r\n      );\r\n    }\r\n\r\n    //Use line token to get use information\r\n    getLineUserProfile(token).then((userProfile) => {\r\n      // save user profile in lineUser\r\n      console.log(userProfile);\r\n      LineUser.create({\r\n        name: userProfile.displayName,\r\n        lineUserId: userProfile.userId,\r\n        pictureURL: userProfile.pictureUrl,\r\n      })\r\n        .then((newLineUser) => {\r\n          createSendToken(newLineUser, 200, res);\r\n        })\r\n        .catch((err) => {\r\n          res.status(500).json({\r\n            status: 'fail',\r\n            error: err,\r\n          });\r\n        });\r\n    });\r\n  });\r\n});\r\n\r\n//Middleware function for protect route\r\nexports.loginOnly = catchAsync(async (req, res, next) => {\r\n  let token;\r\n\r\n  // get token and check token\r\n  if (\r\n    req.headers.authorization &&\r\n    req.headers.authorization.startsWith('Bearer')\r\n  ) {\r\n    token = req.headers.authorization.split(' ')[1];\r\n  }\r\n  //console.log(token);\r\n\r\n  if (!token) {\r\n    return next(new AppError('You are not logged in!', 401));\r\n  }\r\n\r\n  // verification the token\r\n  const decoded = await promisify(jwt.verify)(token, process.env.JWT_SECRET);\r\n\r\n  // check if user still exist\r\n  const currentUser = await LineUser.findById(decoded.id);\r\n  if (!currentUser) {\r\n    return next(\r\n      new AppError('the token belong to this user is no longer exist', 401)\r\n    );\r\n  }\r\n\r\n  // GRANT ACCESS TO PROTECTED ROUTE\r\n  req.user = currentUser;\r\n\r\n  next();\r\n});\r\n","const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst bcrypt = require('bcryptjs');\r\nconst crypto = require('crypto');\r\n\r\nconst lineUserSchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      default: 'default_user_name',\r\n      maxlength: [20, 'a name should not be longer than 10 character'],\r\n      minlength: [3, 'a name must be longer than 3 character'],\r\n      validator: [validator.isAlpha, 'must only contain character'],\r\n    },\r\n    lineUserId: {\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    email: {\r\n      type: String,\r\n    },\r\n    role: {\r\n      type: String,\r\n      enum: ['user', 'admin'],\r\n      default: 'user',\r\n    },\r\n    pictureURL: String,\r\n    classrooms: {\r\n      type: Array,\r\n      default: [],\r\n    },\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\nconst LineUser = mongoose.model('LineUser', lineUserSchema);\r\n\r\nmodule.exports = LineUser;\r\n","const nodemailer = require('nodemailer');\r\n\r\nconst sendEmail = async (options) => {\r\n  // Create a transporter\r\n  const transporter = nodemailer.createTransport({\r\n    host: process.env.EMAIL_HOST,\r\n    port: process.env.EMAIL_PORT,\r\n    auth: {\r\n      user: process.env.EMAIL_USERNAME,\r\n      pass: process.env.EMAIL_PASSWORD,\r\n    },\r\n  });\r\n\r\n  // Define the email option\r\n  const mailOptions = {\r\n    from: 'Sorawit Nuankamma <sorawit@smartclassroom.io>',\r\n    to: options.email,\r\n    subject: options.subject,\r\n    text: options.message,\r\n    //html:\r\n  };\r\n\r\n  // Actually send the email\r\n  await transporter.sendMail(mailOptions);\r\n};\r\n\r\nmodule.exports = sendEmail;\r\n","const express = require('express');\r\nconst classroomController = require('../controller/classroomController');\r\nconst authController = require('../controller/authController');\r\n\r\n// create router from express\r\nconst router = express.Router();\r\n\r\n// Normal route\r\nrouter.get(\r\n  '/getMyClassroom',\r\n  authController.loginOnly,\r\n  classroomController.getMyClassroom\r\n);\r\n\r\nrouter.get('/getMemberInfo', classroomController.getMemberInfo);\r\nrouter.get(\r\n  '/getAllMembersAndSubmissions',\r\n  classroomController.getAllMembersAndSubmissions\r\n);\r\n\r\nrouter.patch(\r\n  '/updateMyClassroom',\r\n  authController.loginOnly,\r\n  classroomController.updateMyClassroom\r\n);\r\n\r\nrouter.post(\r\n  '/joinClassroom',\r\n  authController.loginOnly,\r\n  classroomController.joinClassroom\r\n);\r\n\r\n// Aggreatte route\r\n\r\n//TODO : Protect the route\r\n// CRUD Route  Authentication | Authorization | Responce\r\nrouter\r\n  .route('/')\r\n  .get(classroomController.getAllClassrooms)\r\n  .post(\r\n    authController.loginOnly,\r\n    classroomController.formatPostRequest,\r\n    classroomController.postClassroom\r\n  );\r\n\r\nrouter\r\n  .route('/:id')\r\n  .get(classroomController.getClassroom)\r\n  .patch(classroomController.updateClassroom)\r\n  .delete(classroomController.deleteClassroom);\r\n\r\nmodule.exports = router;\r\n","const Classroom = require('../models/classroomModel');\r\nconst LineUser = require('../models/lineUserModel');\r\nconst Content = require('../models/contentModel');\r\nconst Submission = require('../models/submissionModel');\r\nconst APIFeatures = require('../utils/apifeatures');\r\nconst AppError = require('../utils/appError');\r\nconst catchAsync = require('../utils/catchAsync');\r\nconst utility = require('../utils/utility');\r\n\r\nexports.formatPostRequest = catchAsync(async (req, res, next) => {\r\n  //Validate data\r\n  //packing data\r\n  const classroomObject = {\r\n    name: req.body.name,\r\n    description: req.body.description,\r\n    color: req.body.color,\r\n    users: [],\r\n    rules: req.body.rules,\r\n    grader: [],\r\n    calender: [],\r\n    timetable: {\r\n      mon: [],\r\n      tue: [],\r\n      wed: [],\r\n      thu: [],\r\n      fri: [],\r\n      sat: [],\r\n      sun: [],\r\n    },\r\n  };\r\n\r\n  // fill grader\r\n  // fill timetable\r\n  req.body.timetable.forEach((el) => {\r\n    let day = el[0];\r\n    switch (day) {\r\n      case 'Monday':\r\n        classroomObject.timetable.mon.push(el[1]);\r\n        break;\r\n      case 'Tuesday':\r\n        classroomObject.timetable.tue.push(el[1]);\r\n        break;\r\n      case 'Wednesday':\r\n        classroomObject.timetable.wed.push(el[1]);\r\n        break;\r\n      case 'Thursday':\r\n        classroomObject.timetable.thu.push(el[1]);\r\n        break;\r\n      case 'Friday':\r\n        classroomObject.timetable.fri.push(el[1]);\r\n        break;\r\n      case 'Saturday':\r\n        classroomObject.timetable.sat.push(el[1]);\r\n        break;\r\n      case 'Sunday':\r\n        classroomObject.timetable.sun.push(el[1]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  classroomObject.users.push({\r\n    userId: req.user.id,\r\n    name: req.user.name,\r\n    classroomRole: 'Owner',\r\n  });\r\n  req.body = classroomObject;\r\n\r\n  next();\r\n});\r\n\r\n// Adminstator API\r\n//ROUTE HANDLER\r\nexports.getAllClassrooms = catchAsync(async (req, res, next) => {\r\n  // EXECUTE QUERY FOR IMPLEMENT ( AWAIT จะได้ผลลัพท์เป็น promise object ต้องเอา query แยกไว้)\r\n  //console.log(query);\r\n  // TODO : Fix query\r\n  const features = new APIFeatures(Classroom.find(), req.query)\r\n    .filter()\r\n    .sort()\r\n    .limitFields()\r\n    .paginate();\r\n  const classrooms = await features.query;\r\n\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      classrooms,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getClassroom = catchAsync(async (req, res, next) => {\r\n  const classroom = await Classroom.findById(req.params.id);\r\n  if (!classroom) {\r\n    return next(new AppError('no Classroom found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      classroom,\r\n    },\r\n  });\r\n});\r\n\r\nexports.postClassroom = catchAsync(async (req, res, next) => {\r\n  const newClassroom = await Classroom.create(req.body);\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      newClassroom,\r\n    },\r\n  });\r\n});\r\n\r\nexports.updateClassroom = catchAsync(async (req, res, next) => {\r\n  const classroom = await Classroom.findByIdAndUpdate(req.params.id, req.body, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  if (!classroom) {\r\n    return next(new AppError('no Classroom found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      classroom,\r\n    },\r\n  });\r\n});\r\n\r\nexports.deleteClassroom = catchAsync(async (req, res, next) => {\r\n  const classroom = await Classroom.findByIdAndDelete(req.params.id);\r\n\r\n  if (!classroom) {\r\n    return next(new AppError('no Classroom found with that id', 404));\r\n  }\r\n\r\n  res.status(204).json({\r\n    status: 'success',\r\n    data: null,\r\n  });\r\n});\r\n\r\n// Classroom public API\r\nexports.updateMyClassroom = catchAsync(async (req, res, next) => {\r\n  // check condition\r\n  if (req.body.accessCode) {\r\n    return next(new AppError('cannot change access code', 400));\r\n  }\r\n\r\n  //filter | argument ตามด้วยค่าใน DB ที่ Classroom สามารถเปลี่ยนเองได้\r\n  const filterdBody = filterObject(\r\n    req.body,\r\n    'name',\r\n    'color',\r\n    'users',\r\n    'rules',\r\n    'grader',\r\n    'calender',\r\n    'timetable',\r\n    'description'\r\n  );\r\n  const updateClassroom = await Classroom.findByIdAndUpdate(\r\n    req.Classroom.id,\r\n    filterdBody,\r\n    {\r\n      new: true,\r\n      runValidators: true,\r\n    }\r\n  );\r\n\r\n  //update document\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      Classroom: updateClassroom,\r\n    },\r\n  });\r\n});\r\n\r\n// Classroom route\r\nexports.getMyClassroom = catchAsync(async (req, res, next) => {\r\n  const classrooms = await Classroom.find({ 'users.userId': req.user.id });\r\n\r\n  if (!classrooms) {\r\n    return next(new AppError('class not found', 400));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      classrooms,\r\n    },\r\n  });\r\n});\r\n\r\nexports.joinClassroom = catchAsync(async (req, res, next) => {\r\n  //Always return as array\r\n  const classrooms = await Classroom.find({ accessCode: req.body.accessCode });\r\n  //access the first and only classroom\r\n  const classroom = classrooms[0];\r\n\r\n  if (!classroom) {\r\n    return next(new AppError('classroom not found', 400));\r\n  }\r\n\r\n  //Check if user already in this classroom\r\n  classroom.users.forEach((el) => {\r\n    if (el.userId === req.user.id) {\r\n      return next(new AppError('Already join the classroom', 400));\r\n    }\r\n  });\r\n\r\n  // Add user to classroom\r\n  const classroomNewUser = {\r\n    userId: req.user.id,\r\n    name: req.user.name,\r\n    classroomRole: 'Student',\r\n  };\r\n\r\n  classroom.users.push(classroomNewUser);\r\n  await classroom.save();\r\n\r\n  // Add classroom to user\r\n  const lineUser = await LineUser.findById(classroomNewUser.userId);\r\n  const userNewClassroom = {\r\n    classroomId: classroom.id,\r\n    classroomName: classroom.name,\r\n    classroomColor: classroom.color,\r\n    classroomRole: 'Student',\r\n  };\r\n  lineUser.classrooms.push(userNewClassroom);\r\n  await lineUser.save();\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      classroom,\r\n      lineUser,\r\n    },\r\n  });\r\n});\r\n\r\n//\r\nexports.authorizeFor = (...roles) => {\r\n  return (req, res, next) => {\r\n    // role [ user, admin]\r\n    if (!roles.includes(req.user.role)) {\r\n      return next(new AppError('you do not have permission', 403));\r\n    }\r\n\r\n    next();\r\n  };\r\n};\r\n\r\n// Classroom route\r\nexports.getMemberInfo = catchAsync(async (req, res, next) => {\r\n  // get Classroom\r\n\r\n  const classroom = await Classroom.findById(req.query.classroomId);\r\n  if (!classroom) {\r\n    return next(new AppError('classroom not found', 403));\r\n  }\r\n\r\n  let userInClassroom;\r\n  classroom.users.forEach((el) => {\r\n    if (el.userId === req.query.userId) {\r\n      userInClassroom = el;\r\n    }\r\n  });\r\n  if (!userInClassroom) {\r\n    return next(new AppError('user not belong in this classroom', 403));\r\n  }\r\n\r\n  // get user from param that match\r\n  const lineUser = await LineUser.findById(req.query.userId);\r\n  if (!lineUser) {\r\n    return next(new AppError('line user not found', 403));\r\n  }\r\n  // filter user object name ,pictureURL\r\n  let newUserObject = utility.filterObject(lineUser, 'name');\r\n  console.log(newUserObject);\r\n\r\n  newUserObject = { ...userInClassroom, pictureURL: lineUser.pictureURL };\r\n\r\n  // get submission\r\n  const submissions = await Submission.find({\r\n    userId: req.query.userId,\r\n    classroomId: req.query.classroomId,\r\n  });\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      newUserObject,\r\n      submissions,\r\n    },\r\n  });\r\n});\r\n\r\n// Classroom route\r\nexports.getAllMembersAndSubmissions = catchAsync(async (req, res, next) => {\r\n  if (!req.query.classroomId) {\r\n    return next(new AppError('Invalid request', 400));\r\n  }\r\n\r\n  // get Classroom\r\n  const classroom = await Classroom.findById(req.query.classroomId);\r\n  if (!classroom) {\r\n    return next(new AppError('classroom not found', 400));\r\n  }\r\n\r\n  // get Content\r\n  const assignments = await Content.find({\r\n    type: 'assignment',\r\n    classId: req.query.classroomId,\r\n  });\r\n\r\n  // get submissions that belong in this classroom\r\n  const submissions = await Submission.find({\r\n    classroomId: req.query.classroomId,\r\n  }).sort('contentId');\r\n\r\n  const members = classroom.users.filter(\r\n    (member) => member.classroomRole === 'Student'\r\n  );\r\n\r\n  const column = {};\r\n\r\n  // First Column\r\n  column['column0'] = {\r\n    name: 'ชื่อนักเรียน',\r\n    type: 'link',\r\n    sortAble: true,\r\n    sortInvert: true,\r\n  };\r\n\r\n  column['column1'] = {\r\n    name: 'รหัสนักเรียน',\r\n    type: 'text',\r\n    sortAble: true,\r\n    sortInvert: true,\r\n  };\r\n\r\n  // Mid Column\r\n  assignments.forEach((assignment, index) => {\r\n    column[`column${index + 2}`] = {\r\n      name: assignment.title,\r\n      type: 'editField',\r\n      sortAble: true,\r\n      sortInvert: false,\r\n    };\r\n  });\r\n\r\n  //Aggregrate Column\r\n  column['sum'] = {\r\n    name: 'คะแนนรวม',\r\n    type: 'number',\r\n    sortAble: true,\r\n    sortInvert: true,\r\n  };\r\n\r\n  const memberSubmissions = members.map((member) => {\r\n    const row = {\r\n      column0: {\r\n        value: member.name,\r\n        path: `../classroom-members/${member.userId}`,\r\n      },\r\n    };\r\n    row[`column1`] = {\r\n      value: member.code,\r\n      type: 'number',\r\n    };\r\n\r\n    let sumScore = 0;\r\n    assignments.forEach((assignment, index) => {\r\n      const elementTemplate = {\r\n        isSubmit: false,\r\n        submissionScore: 0,\r\n        element: null,\r\n      };\r\n      submissions.forEach((submission) => {\r\n        if (\r\n          submission.contentId === assignment.id &&\r\n          member.userId === submission.userId\r\n        ) {\r\n          elementTemplate.isSubmit = true;\r\n          elementTemplate.submissionScore = submission.score;\r\n          elementTemplate.submission = submission;\r\n        }\r\n      });\r\n      row[`column${index + 2}`] = {\r\n        value: elementTemplate.submissionScore,\r\n        type: 'field',\r\n        callback: null,\r\n        editEnable: elementTemplate.isSubmit,\r\n        element: elementTemplate.submission,\r\n      };\r\n      sumScore += elementTemplate.submissionScore;\r\n    });\r\n\r\n    row[`sum`] = {\r\n      value: sumScore,\r\n      type: 'number',\r\n    };\r\n\r\n    return row;\r\n  });\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      column,\r\n      memberSubmissions,\r\n    },\r\n  });\r\n});\r\n","const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst bcrypt = require('bcryptjs');\r\nconst crypto = require('crypto');\r\n\r\n//Model\r\nconst User = require('../models/userModel');\r\nconst LineUser = require('../models/lineUserModel');\r\n\r\nconst classroomSchema = new mongoose.Schema(\r\n  {\r\n    name: {\r\n      type: String,\r\n      default: 'default_classname_name',\r\n      maxlength: [50, 'a name should not be longer than 30 character'],\r\n      minlength: [5, 'a name must be longer than 3 character'],\r\n      validator: [validator.isAlpha, 'must only contain character'],\r\n    },\r\n    description: {\r\n      type: String,\r\n    },\r\n    color: {\r\n      type: String,\r\n      enum: ['red', 'green', 'blue', 'yellow'],\r\n      default: 'green',\r\n    },\r\n    users: Array,\r\n    accessCode: {\r\n      type: String,\r\n      unique: true,\r\n    },\r\n    rules: String,\r\n    grader: Array,\r\n    calender: Array,\r\n    timetable: Array,\r\n    lineGroupChatId: String,\r\n    classroomChangedAt: Date,\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// Generate accessCode on new\r\nclassroomSchema.pre('save', function (next) {\r\n  if (!this.isNew) return next();\r\n\r\n  // Generate Room Code\r\n  this.accessCode = crypto.randomBytes(3).toString('hex');\r\n\r\n  next();\r\n});\r\n\r\n// Cascade Save\r\nclassroomSchema.post('save', async function (doc) {\r\n  const user = await LineUser.findById(doc.users[0].userId);\r\n  user.classrooms.push({\r\n    classroomId: doc.id,\r\n    classroomName: doc.name,\r\n    classroomColor: doc.color,\r\n    classroomRole: doc.users[0].classroomRole,\r\n  });\r\n  await user.save();\r\n});\r\n\r\n// Cascade Delete\r\nclassroomSchema.post('findOneAndDelete', async function (doc) {\r\n  const user = await LineUser.findById(doc.users[0].userId);\r\n  user.classrooms = user.classrooms.filter((el) => doc.id !== el.classroomId);\r\n\r\n  await user.save();\r\n});\r\n\r\nconst Classroom = mongoose.model('Classroom', classroomSchema);\r\n\r\nmodule.exports = Classroom;\r\n","const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst line = require('@line/bot-sdk');\r\n\r\nconst client = new line.Client({\r\n  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,\r\n});\r\n\r\nconst contentSchema = new mongoose.Schema(\r\n  {\r\n    title: {\r\n      type: String,\r\n      default: 'default_content_name',\r\n      maxlength: [20, 'a name should not be longer than 10 character'],\r\n      minlength: [3, 'a name must be longer than 3 character'],\r\n      validator: [validator.isAlpha, 'must only contain character'],\r\n    },\r\n    writers: {\r\n      type: Array,\r\n    },\r\n    type: {\r\n      type: String,\r\n      enum: ['annoucement', 'lesson', 'assignment', 'none'],\r\n      default: 'none',\r\n    },\r\n    body: Object,\r\n    classId: String,\r\n    createDate: String,\r\n    lastChangeDate: String,\r\n    dueDate: String,\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// เพิ่มเวลาเปลี่ยน password ครั้งล่าสุดใน database\r\ncontentSchema.pre('save', function (next) {\r\n  this.createDate = Date();\r\n  next();\r\n});\r\n\r\nconst Content = mongoose.model('Content', contentSchema);\r\n\r\nmodule.exports = Content;\r\n","const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\n\r\nconst submissionSchema = new mongoose.Schema(\r\n  {\r\n    comment: {\r\n      type: String,\r\n      default: '',\r\n      maxlength: [100, 'a name should not be longer than 10 character'],\r\n    },\r\n    score: {\r\n      type: Number,\r\n      default: 0,\r\n      min: [0, 'must be more than 0'],\r\n      max: [100, 'must be less or equal to 100'],\r\n    },\r\n    userId: String,\r\n    contentId: String,\r\n    classroomId: String,\r\n    submitDate: String,\r\n    isStudent: Boolean,\r\n    isGraded: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// Save Date on every save\r\nsubmissionSchema.pre('save', function (next) {\r\n  this.submitDate = Date();\r\n  next();\r\n});\r\n\r\nconst Submission = mongoose.model('Submission', submissionSchema);\r\n\r\nmodule.exports = Submission;\r\n","const express = require('express');\r\nconst contentController = require('../controller/contentController');\r\nconst authController = require('../controller/authController');\r\n\r\n// create router from express\r\nconst router = express.Router();\r\n\r\n// Normal route\r\nrouter.get(\r\n  '/getMyContent',\r\n  authController.loginOnly,\r\n  contentController.getMyContent\r\n);\r\n\r\nrouter.patch(\r\n  '/updateMyContent',\r\n  authController.loginOnly,\r\n  contentController.updateMyContent\r\n);\r\n\r\n// Aggreatte route\r\n\r\n//TODO : Protect the route\r\n// CRUD Route  Authentication | Authorization | Responce\r\nrouter\r\n  .route('/')\r\n  .get(contentController.getAllContents)\r\n  .post(authController.loginOnly, contentController.postContent);\r\n\r\nrouter\r\n  .route('/:id')\r\n  .get(contentController.getContent)\r\n  .patch(contentController.updateContent)\r\n  .delete(contentController.deleteContent);\r\n\r\nmodule.exports = router;\r\n","const Content = require('../models/contentModel');\r\nconst APIFeatures = require('../utils/apifeatures');\r\nconst AppError = require('../utils/appError');\r\nconst catchAsync = require('../utils/catchAsync');\r\n\r\n// Adminstator API\r\n//ROUTE HANDLER\r\nexports.getAllContents = catchAsync(async (req, res, next) => {\r\n  // EXECUTE QUERY FOR IMPLEMENT ( AWAIT จะได้ผลลัพท์เป็น promise object ต้องเอา query แยกไว้)\r\n  const features = new APIFeatures(Content.find(), req.query)\r\n    .filter()\r\n    .sort()\r\n    .limitFields()\r\n    .paginate();\r\n  const contents = await features.query;\r\n\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      contents,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getContent = catchAsync(async (req, res, next) => {\r\n  const content = await Content.findById(req.params.id);\r\n  if (!content) {\r\n    return next(new AppError('no Content found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      content,\r\n    },\r\n  });\r\n});\r\n\r\nexports.postContent = catchAsync(async (req, res, next) => {\r\n  const newContent = await Content.create(req.body);\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      newContent,\r\n    },\r\n  });\r\n});\r\n\r\nexports.updateContent = catchAsync(async (req, res, next) => {\r\n  const content = await Content.findByIdAndUpdate(req.params.id, req.body, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  if (!content) {\r\n    return next(new AppError('no Content found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      content,\r\n    },\r\n  });\r\n});\r\n\r\nexports.deleteContent = catchAsync(async (req, res, next) => {\r\n  const content = await Content.findByIdAndDelete(req.params.id);\r\n\r\n  if (!content) {\r\n    return next(new AppError('no Content found with that id', 404));\r\n  }\r\n\r\n  res.status(204).json({\r\n    status: 'success',\r\n    data: null,\r\n  });\r\n});\r\n\r\n// Content public API\r\nexports.updateMyContent = catchAsync(async (req, res, next) => {\r\n  // check condition\r\n\r\n  //filter | argument ตามด้วยค่าใน DB ที่ Content สามารถเปลี่ยนเองได้\r\n  /*\r\n  const filterdBody = filterObject(\r\n    req.body,\r\n    'name',\r\n    'color',\r\n    'users',\r\n    'rules',\r\n    'grader',\r\n    'calender',\r\n    'timetable',\r\n    'description'\r\n  );*/\r\n\r\n  const updateContent = await Content.findByIdAndUpdate(\r\n    req.content.id,\r\n    req.body,\r\n    {\r\n      new: true,\r\n      runValidators: true,\r\n    }\r\n  );\r\n\r\n  //update document\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      content: updateContent,\r\n    },\r\n  });\r\n});\r\n\r\n// Content route\r\n\r\nexports.getMyContent = catchAsync(async (req, res, next) => {\r\n  const content = req.content;\r\n  if (!content) {\r\n    return next(new AppError('unknown error', 404));\r\n  }\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      content,\r\n    },\r\n  });\r\n});\r\n","const express = require('express');\r\nconst lineUserController = require('../controller/lineUserController');\r\nconst authController = require('../controller/authController');\r\n\r\n// create router from express\r\nconst router = express.Router();\r\n\r\nrouter.post('/login', authController.lineLogin);\r\nrouter.post('/signup', authController.lineSignUp);\r\n\r\nrouter.post('/isLogin', authController.loginOnly, authController.isLogin);\r\n\r\n// CRUD Route  Authentication | Authorization | Responce\r\nrouter\r\n  .route('/')\r\n  .get(authController.loginOnly, lineUserController.getAllLineUsers)\r\n  .post(lineUserController.postLineUser);\r\n\r\nrouter\r\n  .route('/:id')\r\n  .get(lineUserController.getLineUser)\r\n  .patch(lineUserController.updateLineUser)\r\n  .delete(\r\n    authController.protect,\r\n    authController.restrictTo('admin'),\r\n    lineUserController.deleteLineUser\r\n  );\r\n\r\nmodule.exports = router;\r\n","const LineUser = require('../models/lineUserModel');\r\nconst APIFeatures = require('../utils/apifeatures');\r\nconst AppError = require('../utils/appError');\r\nconst catchAsync = require('../utils/catchAsync');\r\nconst utility = require('../utils/utility');\r\n\r\n// Adminstator API\r\n//ROUTE HANDLER\r\n\r\nexports.getAllLineUsers = catchAsync(async (req, res, next) => {\r\n  // EXECUTE QUERY FOR IMPLEMENT ( AWAIT จะได้ผลลัพท์เป็น promise object ต้องเอา query แยกไว้)\r\n  const features = new APIFeatures(LineUser.find(), req.query)\r\n    .filter()\r\n    .sort()\r\n    .limitFields()\r\n    .paginate();\r\n  const lineUsers = await features.query;\r\n\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      lineUsers,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getLineUser = catchAsync(async (req, res, next) => {\r\n  const user = await LineUser.findById(req.params.id);\r\n  if (!user) {\r\n    return next(new AppError('no user found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n});\r\n\r\nexports.postLineUser = catchAsync(async (req, res, next) => {\r\n  const newLineUser = await LineUser.create(req.body);\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      newLineUser,\r\n    },\r\n  });\r\n});\r\n\r\nexports.updateLineUser = catchAsync(async (req, res, next) => {\r\n  const user = await LineUser.findByIdAndUpdate(req.params.id, req.body, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  if (!user) {\r\n    return next(new AppError('no user found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n});\r\n\r\nexports.deleteLineUser = catchAsync(async (req, res, next) => {\r\n  const user = await LineUser.findByIdAndDelete(req.params.id);\r\n\r\n  if (!user) {\r\n    return next(new AppError('no user found with that id', 404));\r\n  }\r\n\r\n  res.status(204).json({\r\n    status: 'success',\r\n    data: null,\r\n  });\r\n});\r\n\r\nexports.getLineUserStats = catchAsync(async (req, res, next) => {\r\n  const stats = await LineUser.aggregate([\r\n    {\r\n      $match: { number: { $gte: 3 } },\r\n    },\r\n    {\r\n      $group: {\r\n        _id: '$email',\r\n        num: { $sum: 1 },\r\n        sumNum: { $sum: '$number' },\r\n        avg: { $avg: '$number' },\r\n        min: { $min: '$number' },\r\n        max: { $max: '$number' },\r\n      },\r\n    },\r\n    {\r\n      $sort: { avg: 1 },\r\n    },\r\n    {\r\n      $match: { _id: { $ne: 'sorawit.nu@ku.th' } },\r\n    },\r\n  ]);\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      stats,\r\n    },\r\n  });\r\n});\r\n\r\n// LineUser public API\r\n\r\nexports.updateMyLineUser = catchAsync(async (req, res, next) => {\r\n  //filter | argument ตามด้วยค่าใน DB ที่ user สามารถเปลี่ยนเองได้\r\n  const filterdBody = utility.filterObject(req.body, 'name');\r\n  const updateLineUser = await LineUser.findByIdAndUpdate(\r\n    req.user.id,\r\n    filterdBody,\r\n    {\r\n      new: true,\r\n      runValidators: true,\r\n    }\r\n  );\r\n\r\n  //update document\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user: updateLineUser,\r\n    },\r\n  });\r\n});\r\n\r\n// LineUser route\r\n\r\n/**\r\n * Get the user from the request and return it.\r\n */\r\nexports.getMyLineUser = catchAsync(async (req, res, next) => {\r\n  const user = req.user;\r\n  if (!user) {\r\n    return next(new AppError('unknown error', 404));\r\n  }\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n});\r\n","const express = require('express');\r\nconst fileController = require('../controller/fileController');\r\nconst authController = require('../controller/authController');\r\n\r\n// create router from express\r\nconst router = express.Router();\r\n\r\n// Aggreatte route\r\n\r\n//TODO : Protect the route\r\n// CRUD Route  Authentication | Authorization | Responce\r\nrouter.route('/').get(fileController.getAllFiles).post(fileController.postFile);\r\n\r\nrouter\r\n  .route('/:id')\r\n  .get(fileController.getFile)\r\n  .patch(fileController.updateFile)\r\n  .delete(fileController.deleteFile);\r\n\r\nmodule.exports = router;\r\n","const File = require('../models/fileModel');\r\nconst APIFeatures = require('../utils/apifeatures');\r\nconst AppError = require('../utils/appError');\r\nconst catchAsync = require('../utils/catchAsync');\r\n\r\n// Adminstator API\r\n//ROUTE HANDLER\r\nexports.getAllFiles = catchAsync(async (req, res, next) => {\r\n  // EXECUTE QUERY FOR IMPLEMENT ( AWAIT จะได้ผลลัพท์เป็น promise object ต้องเอา query แยกไว้)\r\n  const features = new APIFeatures(File.find(), req.query)\r\n    .filter()\r\n    .sort()\r\n    .limitFields()\r\n    .paginate();\r\n  const files = await features.query;\r\n\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      files,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getFile = catchAsync(async (req, res, next) => {\r\n  const file = await File.findById(req.params.id);\r\n  if (!file) {\r\n    return next(new AppError('no File found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      file,\r\n    },\r\n  });\r\n});\r\n\r\nexports.postFile = catchAsync(async (req, res, next) => {\r\n  const newFile = await File.create(req.body);\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      newFile,\r\n    },\r\n  });\r\n});\r\n\r\nexports.updateFile = catchAsync(async (req, res, next) => {\r\n  const file = await File.findByIdAndUpdate(req.params.id, req.body, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  if (!file) {\r\n    return next(new AppError('no File found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      file,\r\n    },\r\n  });\r\n});\r\n\r\nexports.deleteFile = catchAsync(async (req, res, next) => {\r\n  const file = await File.findByIdAndDelete(req.params.id);\r\n\r\n  if (!file) {\r\n    return next(new AppError('no File found with that id', 404));\r\n  }\r\n\r\n  res.status(204).json({\r\n    status: 'success',\r\n    data: null,\r\n  });\r\n});\r\n\r\n// File public API\r\nexports.updateMyFile = catchAsync(async (req, res, next) => {\r\n  // check condition\r\n\r\n  //filter | argument ตามด้วยค่าใน DB ที่ File สามารถเปลี่ยนเองได้\r\n  /*\r\n  const filterdBody = filterObject(\r\n    req.body,\r\n    'name',\r\n    'color',\r\n    'users',\r\n    'rules',\r\n    'grader',\r\n    'calender',\r\n    'timetable',\r\n    'description'\r\n  );*/\r\n\r\n  const updateFile = await File.findByIdAndUpdate(req.file.id, req.body, {\r\n    new: true,\r\n    runValidators: true,\r\n  });\r\n\r\n  //update document\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      file: updateFile,\r\n    },\r\n  });\r\n});\r\n","const mongoose = require('mongoose');\r\nconst validator = require('validator');\r\n\r\nconst fileSchema = new mongoose.Schema(\r\n  {\r\n    filename: {\r\n      type: String,\r\n      default: 'default_content_name',\r\n    },\r\n    fileStackURL: String,\r\n    fileStackHandle: String,\r\n    size: Number,\r\n    mimetype: String,\r\n    fileStackUploadId: String,\r\n    uploadDate: String,\r\n    submissionId: String,\r\n    contentId: String,\r\n    isDeleted: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  {\r\n    toJSON: { virtuals: true },\r\n    toObject: { virtuals: true },\r\n  }\r\n);\r\n\r\n// เพิ่มเวลาสร้าง\r\nfileSchema.pre('save', function (next) {\r\n  this.uploadDate = Date();\r\n  next();\r\n});\r\n\r\nconst File = mongoose.model('File', fileSchema);\r\n\r\nmodule.exports = File;\r\n","const express = require('express');\r\nconst submissionController = require('../controller/submissionController');\r\nconst authController = require('../controller/authController');\r\n\r\n// create router from express\r\nconst router = express.Router();\r\n// normal route\r\nrouter\r\n  .route('/getMySubmission')\r\n  .post(authController.loginOnly, submissionController.getMySubmission);\r\n\r\n// Aggreatte route\r\nrouter\r\n  .route('/getSubmissionsAndFile')\r\n  .get(submissionController.getAllSubmissionsAndFile);\r\n\r\n//TODO : Protect the route\r\n// CRUD Route  Authentication | Authorization | Responce\r\nrouter\r\n  .route('/')\r\n  .get(submissionController.getAllSubmissions)\r\n  .post(submissionController.postSubmission);\r\n\r\nrouter\r\n  .route('/:id')\r\n  .get(submissionController.getSubmission)\r\n  .patch(submissionController.updateSubmission)\r\n  .delete(submissionController.deleteSubmission);\r\n\r\nmodule.exports = router;\r\n","const Submission = require('../models/submissionModel');\r\nconst File = require('../models/fileModel');\r\nconst APIFeatures = require('../utils/apifeatures');\r\nconst AppError = require('../utils/appError');\r\nconst catchAsync = require('../utils/catchAsync');\r\nconst Classroom = require('../models/classroomModel');\r\n\r\n// Adminstator API\r\n//ROUTE HANDLER\r\nexports.getAllSubmissions = catchAsync(async (req, res, next) => {\r\n  // EXECUTE QUERY FOR IMPLEMENT ( AWAIT จะได้ผลลัพท์เป็น promise object ต้องเอา query แยกไว้)\r\n  const features = new APIFeatures(Submission.find(), req.query)\r\n    .filter()\r\n    .sort()\r\n    .limitFields()\r\n    .paginate();\r\n  const submissions = await features.query;\r\n\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      submissions,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getSubmission = catchAsync(async (req, res, next) => {\r\n  const submission = await Submission.findById(req.params.id);\r\n  if (!submission) {\r\n    return next(new AppError('no Submission found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      submission,\r\n    },\r\n  });\r\n});\r\n\r\nexports.postSubmission = catchAsync(async (req, res, next) => {\r\n  const newSubmission = await Submission.create(req.body);\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      newSubmission,\r\n    },\r\n  });\r\n});\r\n\r\nexports.updateSubmission = catchAsync(async (req, res, next) => {\r\n  const submission = await Submission.findByIdAndUpdate(\r\n    req.params.id,\r\n    req.body,\r\n    {\r\n      new: true,\r\n      runValidators: true,\r\n    }\r\n  );\r\n\r\n  if (!submission) {\r\n    return next(new AppError('no Submission found with that id', 404));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      submission,\r\n    },\r\n  });\r\n});\r\n\r\nexports.deleteSubmission = catchAsync(async (req, res, next) => {\r\n  const submission = await Submission.findByIdAndDelete(req.params.id);\r\n\r\n  if (!submission) {\r\n    return next(new AppError('no Submission found with that id', 404));\r\n  }\r\n\r\n  res.status(204).json({\r\n    status: 'success',\r\n    data: null,\r\n  });\r\n});\r\n\r\n// Submission public API\r\nexports.updateMySubmission = catchAsync(async (req, res, next) => {\r\n  // check condition\r\n\r\n  //filter | argument ตามด้วยค่าใน DB ที่ Submission สามารถเปลี่ยนเองได้\r\n  /*\r\n  const filterdBody = filterObject(\r\n    req.body,\r\n    'name',\r\n    'color',\r\n    'users',\r\n    'rules',\r\n    'grader',\r\n    'calender',\r\n    'timetable',\r\n    'description'\r\n  );*/\r\n\r\n  const updateSubmission = await Submission.findByIdAndUpdate(\r\n    req.submission.id,\r\n    req.body,\r\n    {\r\n      new: true,\r\n      runValidators: true,\r\n    }\r\n  );\r\n\r\n  //update document\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      submission: updateSubmission,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getMySubmission = catchAsync(async (req, res, next) => {\r\n  const submission = await Submission.findOne({\r\n    userId: req.user.id,\r\n    contentId: req.body.contentId,\r\n  });\r\n\r\n  if (!submission) {\r\n    return next(new AppError('submission not found', 400));\r\n  }\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      submission,\r\n    },\r\n  });\r\n});\r\n\r\nexports.getAllSubmissionsAndFile = catchAsync(async (req, res, next) => {\r\n  // check query\r\n  if (!req.query.contentId) {\r\n    return next(new AppError('bad request', 400));\r\n  }\r\n\r\n  // get submission\r\n  const submissions = await Submission.find({ contentId: req.query.contentId });\r\n\r\n  // get classroom\r\n  // all submission are in the same classroom\r\n  const classroom = await Classroom.findById(submissions[0].classroomId);\r\n  const members = classroom.users;\r\n\r\n  const files = await File.find({\r\n    contentId: req.query.contentId,\r\n  });\r\n\r\n  const submissionsAndFiles = [];\r\n\r\n  submissions.forEach((el) => {\r\n    const tempObject = {\r\n      member: {},\r\n      id: el.id,\r\n      comment: el.comment,\r\n      score: el.score,\r\n      isGraded: el.isGraded,\r\n      userId: el.userId,\r\n      contentId: el.contentId,\r\n      classroomId: el.classroomId,\r\n      isStudent: el.isStudent,\r\n      submitDate: el.submitDate,\r\n      files: [],\r\n    };\r\n    members.forEach((member) => {\r\n      if (member.userId === el.userId) {\r\n        tempObject.member = member;\r\n      }\r\n    });\r\n    files.forEach((file) => {\r\n      if (file.submissionId === el.id) {\r\n        tempObject.files.push(file);\r\n      }\r\n    });\r\n    submissionsAndFiles.push(tempObject);\r\n  });\r\n\r\n  // SEND RESPONSE\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      submissionsAndFiles,\r\n    },\r\n  });\r\n});\r\n","const express = require('express');\r\nconst lineAPIController = require('../controller/lineAPIController');\r\n\r\n// create router from express\r\nconst router = express.Router();\r\n\r\n// CRUD Route  Authentication | Authorization | Responce\r\nrouter.route('/postLineMessage').post(lineAPIController.postLineMessage);\r\n\r\nmodule.exports = router;\r\n","const catchAsync = require('../utils/catchAsync');\r\nconst line = require('@line/bot-sdk');\r\nconst Classroom = require('../models/classroomModel');\r\nconst LineUser = require('../models/lineUserModel');\r\n\r\nconst client = new line.Client({\r\n  channelAccessToken: `0S82MK8Q8Db9CqR4lh26Tr9qoU16U5p4RS0xfIXBEGne7zHYpq7plHgEMCW8TCgss85IrcWwrRdfP5q0VoMHFrOB1850fGdkiw9y0rX61cblBm5KfC/0FDr7yazl+SY7wo4eOcNlF4E74WjZIumo0wdB04t89/1O/w1cDnyilFU=`,\r\n});\r\n\r\nconst handleConnectClassroom = async (event, accessCode) => {\r\n  const classroom = await Classroom.findOne({ accessCode: accessCode });\r\n  if (!classroom) {\r\n    return `ไม่พบห้องเรียนที่มีรหัสนั้น โปรดลองใหม่ในภายหลัง หากรอแล้วยังเกิดปัญหาอยู่ โปรดติดต่อฝ่ายสนับสนุนผลิตภัณท์`;\r\n  }\r\n  // find owner lineUserId with the classroom owner id\r\n  const lineUser = await LineUser.findById(classroom.users[0].userId);\r\n  if (!lineUser) {\r\n    return `ข้อผิดพลาด: สมาชิกไม่ได้เป็นสมาชิกห้องเรียนนั้นๆ`;\r\n  }\r\n  // check if user is owner\r\n  if (event.source.userId !== lineUser.lineUserId) {\r\n    return `ข้อผิดพลาด: สมาชิกไม่ได้เป็นเจ้าของห้องเรียน`;\r\n  }\r\n\r\n  // check if classroom already connected\r\n  if (classroom.lineGroupChatId) {\r\n    return `ข้อผิดพลาด: ห้องเรียนนี้ถูกเชื่อมต่อกับกลุ่มสนทนาอื่นเรียบร้อยแล้ว`;\r\n  }\r\n  // save groupchatId to classroom\r\n  classroom.lineGroupChatId = event.source.groupId;\r\n  classroom.save();\r\n  return `เชื่อมต่อกับห้องเรียน ${classroom.name} สำเร็จ`;\r\n};\r\n\r\nconst commandBlock = {\r\n  connect: handleConnectClassroom,\r\n  test: () => {\r\n    return 'ทดสอบ 123';\r\n  },\r\n};\r\n\r\nexports.postLineMessage = catchAsync(async (req, res, next) => {\r\n  if (!req.body) {\r\n    res.status(400).json({\r\n      status: 'fail',\r\n    });\r\n  }\r\n  const destination = req.body.destination;\r\n  const events = req.body.events;\r\n\r\n  const promises = events.map(async (event) => {\r\n    const message = {\r\n      type: 'text',\r\n      text: '',\r\n    };\r\n    let userMessage = event.message.text.trim();\r\n    if (event.type === 'join') {\r\n      message.text =\r\n        'สวัสดีครับ ผมคือ Smart Classroom bot โดยผมจะทำหน้าที่ในการแจ้งเตือนข่าวสารต่างๆที่เกี่ยวข้องกับห้องเรียน ฝากตัวด้วยนะครับผม';\r\n    }\r\n    if (userMessage.startsWith('$')) {\r\n      // bot command\r\n      let command = userMessage.slice(1, userMessage.length).split(' ');\r\n      // mapping command to each case\r\n      message.text = commandBlock[command[0]](event, command[1]);\r\n    }\r\n    if (message.text !== '') {\r\n      await client.replyMessage(`${event.replyToken}`, message);\r\n    }\r\n  });\r\n\r\n  await Promise.all(promises);\r\n\r\n  res.status(200).json({\r\n    status: 'success',\r\n  });\r\n});\r\n"],"names":[],"version":3,"file":"main.js.map","sourceRoot":"../"}